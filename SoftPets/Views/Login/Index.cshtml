@model SoftPets.Models.LoginViewModel
@{
    ViewBag.Title = "Iniciar Sesión";
    Layout = null;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/site.css" rel="stylesheet" />

<div class="login-bg">
    <div class="login-card">
        <div class="login-logo">SoftPet</div>
        <img src="~/Content/Imagenes/HuellasPerro.gif" alt="Huellas de perro" class="login-huellas" />
        <h3 class="text-center mb-4">Iniciar Sesión</h3>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="mb-3">
                @Html.LabelFor(m => m.Nombre, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Usuario", maxlength = 100, id = "Nombre" })
                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.Contrasenia, htmlAttributes: new { @class = "form-label" })
                @Html.PasswordFor(m => m.Contrasenia, new { @class = "form-control", placeholder = "Contraseña", maxlength = 255, id = "Contrasenia" })
                @Html.ValidationMessageFor(m => m.Contrasenia, "", new { @class = "text-danger" })
            </div>
            <div class="d-grid">
                <button type="submit" class="btn btn-unificado">Ingresar</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.querySelector('form').onsubmit = function (e) {
            var nombre = document.getElementById('Nombre').value.trim();
            var contrasenia = document.getElementById('Contrasenia').value.trim();

            if (!nombre) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Campo requerido',
                    text: 'El usuario es obligatorio.',
                    showConfirmButton: true
                });
                e.preventDefault();
                return false;
            }
            if (!contrasenia) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Campo requerido',
                    text: 'La contraseña es obligatoria.',
                    showConfirmButton: true
                });
                e.preventDefault();
                return false;
            }
        };

        @if (ViewData.ModelState != null && ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
        {
            var error = ViewData.ModelState.Values.SelectMany(v => v.Errors).FirstOrDefault()?.ErrorMessage ?? "";
            if (!string.IsNullOrEmpty(error))
            {
                <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Error de inicio de sesión',
                    text: '@error',
                    showConfirmButton: true
                });
                </text>
            }
        }
    </script>
}