@model IEnumerable<SoftPets.Models.HistorialClinico>
@{
    ViewBag.Title = "Historial Consulta - Mis Mascotas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int duenioId = ViewBag.DuenioId;
}

<div class="main-content-bg">
    <div class="tabla-container">
        <h2 class="text-center mb-4">Historial de Consultas de mis Mascotas</h2>
        <div class="text-center mb-3">
            <button class="btn btn-unificado btn-sm me-2" onclick="filtrarConsultas('proceso')">Consultas en Proceso</button>
            <button class="btn btn-unificado btn-sm" onclick="filtrarConsultas('finalizado')">Consultas Finalizadas</button>
            <button class="btn btn-secondary btn-sm ms-2" onclick="filtrarConsultas('')">Todas</button>
        </div>
        <p class="text-center">
            @Html.ActionLink("Registrar Consulta", "Create", new { duenioId = ViewBag.DuenioId, tipo = "Consulta" }, new { @class = "btn btn-unificado btn-crear-nuevo mb-3" })
        </p>
        <div id="tablaConsultas">
            <table class="table table-custom">
                <tr>
                    <th>Mascota</th>
                    <th>Motivo</th>
                    <th>Fecha Inicio</th>
                    <th>Fecha Posible Fin</th>
                    <th>Fecha Final</th>
                    <th>Acciones</th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.NombreMascota</td>
                        <td>@item.Motivo</td>
                        <td>@item.FechaInicioTratamiento.ToString("dd/MM/yyyy")</td>
                        <td>@item.FechaPosibleFinTratamiento.ToString("dd/MM/yyyy")</td>
                        <td>@(item.FechaFinTratamiento.HasValue ? item.FechaFinTratamiento.Value.ToString("dd/MM/yyyy") : "-")</td>
                        <td>
                            <div class="acciones-btn-group" style="margin-bottom:6px;">
                                <a href="@Url.Action("Edit", new { id = item.Id })"
                                   class="btn btn-unificado btn-sm @(item.FechaFinTratamiento.HasValue ? "disabled" : "")"
                                   title="Editar"
                                   @(item.FechaFinTratamiento.HasValue ? "tabindex='-1' aria-disabled='true'" : "")>
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            </div>
                            <div class="acciones-btn-group">
                                <a href="@Url.Action("Index", "DetalleHistorialClinico", new { historialClinicoId = item.Id })" class="btn btn-unificado btn-sm" title="Ver Diagnóstico">
                                    <i class="bi bi-clipboard2-pulse"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>
        </div>
</div>

<div class="modal fade" id="detallesHistorialClinicoModal" tabindex="-1" aria-labelledby="detallesHistorialClinicoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detallesHistorialClinicoModalLabel">Detalles de Historial Clínico</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="detallesHistorialClinicoBody">
                <!-- Aquí se llenará dinámicamente -->
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    @if (TempData["SwalMascotaEditada"] != null)
    {
        <text>
            Swal.fire({
            icon: 'success',
            title: '¡Operación exitosa!',
            text: '@Html.Raw(TempData["SwalMascotaEditada"].ToString())',
            showConfirmButton: false,
            timer: 1800
            });
        </text>
    }
    @if (TempData["SwalError"] != null)
    {
        <text>
            Swal.fire({
            icon: 'error',
            title: '¡Error!',
            text: '@Html.Raw(TempData["SwalError"].ToString())',
            showConfirmButton: true
            });
        </text>
    }
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function filtrarConsultas(estado) {
            $.get(window.location.pathname, { estado: estado }, function (html) {
                // Extrae solo el contenido de #tablaConsultas del HTML devuelto
                var newTable = $(html).find("#tablaConsultas").html();
                $("#tablaConsultas").html(newTable);
            });
        }
    </script>
